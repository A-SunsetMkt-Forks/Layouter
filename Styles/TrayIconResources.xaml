<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:tb="http://www.hardcodet.net/taskbar">
    <!-- 托盘菜单样式 -->
    <Style x:Key="TrayMenuStyle" TargetType="ContextMenu">
        <Setter Property="Background" Value="#F5F5F5"/>
        <Setter Property="BorderBrush" Value="#DDDDDD"/>
    </Style>

    <!-- 托盘菜单项样式 -->
    <Style x:Key="TrayMenuItemStyle" TargetType="MenuItem">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="#333333"/>
        <Setter Property="Padding" Value="8,4"/>
        <Setter Property="Height" Value="24"/>
        <Setter Property="Margin" Value="0,1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="MenuItem">
                    <Border x:Name="Border" Background="{TemplateBinding Background}" BorderThickness="0">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="24" SharedSizeGroup="Icon"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto" SharedSizeGroup="Shortcut"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>

                            <!-- 图标 -->
                            <ContentPresenter x:Name="Icon" Content="{TemplateBinding Icon}" Margin="4,0" VerticalAlignment="Center"/>
                            <!-- 垂直分割线-->
                            <Border x:Name="IconSeparator" Grid.Column="0" Width="1" Margin="0,2" HorizontalAlignment="Right"  Background="#F0F0F0" Visibility="Visible"/>
                            <!-- 菜单项文本 -->
                            <ContentPresenter Grid.Column="1" ContentSource="Header" Margin="18,0,6,0" VerticalAlignment="Center"/>
                            <!-- 快捷键 -->
                            <TextBlock Grid.Column="2" Text="{TemplateBinding InputGestureText}" Margin="4,0" VerticalAlignment="Center"/>
                            <!-- 子菜单箭头 -->
                            <Path x:Name="Arrow" Grid.Column="3" Data="M0,0 L4,3.5 L0,7 Z" Fill="{TemplateBinding Foreground}" Margin="6,0" VerticalAlignment="Center" Visibility="Collapsed"/>
                            <!-- 子菜单 -->
                            <Popup x:Name="SubMenuPopup" Placement="Right" IsOpen="{TemplateBinding IsSubmenuOpen}" AllowsTransparency="True" Focusable="False" PopupAnimation="Fade">
                                <Border x:Name="SubMenuBorder" Background="{StaticResource {x:Static SystemColors.ControlBrushKey}}" BorderBrush="{StaticResource {x:Static SystemColors.ControlDarkBrushKey}}" BorderThickness="1">
                                    <ScrollViewer CanContentScroll="True" Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}">
                                        <ItemsPresenter Margin="2"/>
                                    </ScrollViewer>
                                </Border>
                            </Popup>
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <!-- 显示图标分隔线的条件 -->
                        <Trigger Property="Icon" Value="{x:Null}">
                            <Setter TargetName="Icon" Property="Visibility" Value="Collapsed"/>
                            <!-- 当没有图标时，隐藏分割线 -->
                            <!--<Setter TargetName="IconSeparator" Property="Visibility" Value="Collapsed"/>-->
                        </Trigger>
                        <Trigger Property="HasItems" Value="True">
                            <Setter TargetName="Arrow" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsHighlighted" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="#E5F3FF"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="#AAAAAA"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!-- 托盘图标 -->
    <tb:TaskbarIcon x:Key="TrayIcon" ToolTipText="桌面助手(Layouter)" DoubleClickCommand="{Binding NewWindowCommand}"/>
</ResourceDictionary>